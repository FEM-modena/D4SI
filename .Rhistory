"a",
"per",
"io",
"e",
"poi"
)
chat_clean <- chat %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
View(chat_clean)
chat_clean <- chat_clean %>%
na.omit(chat_clean)
chat_clean <- chat_clean %>%
filter(!word %in% to_remove)
to_remove <- c((stopwords),
"media",
"omitted",
"image",
"audio",
"video",
"gif",
"di",
"che",
"a",
"per",
"io",
"e",
"poi"
)
chat_clean <- chat %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
chat_clean <- chat_clean %>%
na.omit(chat_clean)
chat_clean <- chat_clean %>%
filter(!word %in% to_remove)
names(chat)
View(chat)
chat %>%
mutate(day = date(time)) %>%
count(day) %>%
ggplot(aes(x = day, y = n)) +
geom_bar(stat = "identity") +
ylab("") + xlab("") +
ggtitle("Messaggi ogni giorno")
chat %>%
mutate(day = date(time)) %>%
count(day) %>%
ggplot(aes(x = day, y = n, color = author)) +
geom_bar(stat = "identity") +
ylab("") + xlab("") +
ggtitle("Messaggi ogni giorno")
View(chat)
install.packages("plotly")
x <- chat %>%
mutate(day = date(time)) %>%
count(day) %>%
ggplot(aes(x = day, y = n)) +
geom_bar(stat = "identity") +
ylab("") + xlab("") +
ggtitle("Messaggi ogni giorno")
ggplotly(x)
library(plotly)
ggplotly(x)
View(chat_clean)
chat_clean %>%
mutate(day = date(time)) %>%
count(author) %>%
ggplot(aes(x = reorder(author, n), y = n)) +
geom_bar(stat = "identity") +
ylab("") + xlab("") +
coord_flip() +
ggtitle("Numeri di messaggi per partecipante alla chat")
y<-chat_clean %>%
mutate(day = date(time)) %>%
count(author) %>%
ggplot(aes(x = reorder(author, n), y = n)) +
geom_bar(stat = "identity") +
ylab("") + xlab("") +
coord_flip() +
ggtitle("Numeri di messaggi per partecipante alla chat")
ggplotly(y)
y<-chat_clean %>%
mutate(day = date(time)) %>%
count(author) %>%
ggplot(aes(x = reorder(author, n), y = n, fill = author)) +
geom_bar(stat = "identity") +
ylab("") + xlab("") +
coord_flip() +
ggtitle("Numeri di messaggi per partecipante alla chat")
ggplotly(y)
chat_clean%>%
filter(author == "Lorenzo Andreoli") %>%
count(word, sort = TRUE) %>%
top_n(n = 10, n) %>%
ggplot(aes(x = reorder(word, n), y = n)) +
geom_col(show.legend = FALSE, fill = 'steelblue') +
ylab("") + xlab("") +
coord_flip() +
ggtitle("Parole uniche di Lorenzo")
to_remove <- c((stopwords),
"media",
"omitted",
"image",
"audio",
"video",
"gif",
"di",
"che",
"a",
"per",
"io",
"e",
"poi",
"il",
"la",
"https",
"ma"
)
chat_clean <- chat_clean %>%
na.omit(chat_clean)
chat_clean <- chat_clean %>%
filter(!word %in% to_remove)
chat_clean%>%
filter(author == "Lorenzo Andreoli") %>%
count(word, sort = TRUE) %>%
top_n(n = 10, n) %>%
ggplot(aes(x = reorder(word, n), y = n)) +
geom_col(show.legend = FALSE, fill = 'steelblue') +
ylab("") + xlab("") +
coord_flip() +
ggtitle("Parole uniche di Lorenzo")
to_remove <- c((stopwords),
"media",
"omitted",
"image",
"audio",
"video",
"gif",
"di",
"che",
"a",
"per",
"io",
"e",
"poi",
"il",
"la",
"https",
"ma",
"è"
)
chat_clean <- chat %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
chat_clean <- chat_clean %>%
na.omit(chat_clean)
chat_clean%>%
filter(author == "Lorenzo Andreoli") %>%
count(word, sort = TRUE) %>%
top_n(n = 10, n) %>%
ggplot(aes(x = reorder(word, n), y = n)) +
geom_col(show.legend = FALSE, fill = 'steelblue') +
ylab("") + xlab("") +
coord_flip() +
ggtitle("Parole uniche di Lorenzo")
to_remove <- c((stopwords),
"media",
"omitted",
"image",
"audio",
"video",
"gif",
"di",
"che",
"a",
"per",
"io",
"e",
"poi",
"il",
"la",
"https",
"ma",
"è"
)
chat_clean <- chat %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
chat_clean <- chat_clean %>%
na.omit(chat_clean)
names(chat)
chat_clean%>%
filter(author == "Lorenzo Andreoli") %>%
count(word, sort = TRUE) %>%
top_n(n = 10, n) %>%
ggplot(aes(x = reorder(word, n), y = n)) +
geom_col(show.legend = FALSE, fill = 'steelblue') +
ylab("") + xlab("") +
coord_flip() +
ggtitle("Parole uniche di Lorenzo")
chat_clean <- chat_clean %>%
filter(!word %in% to_remove)
chat_clean%>%
filter(author == "Lorenzo Andreoli") %>%
count(word, sort = TRUE) %>%
top_n(n = 10, n) %>%
ggplot(aes(x = reorder(word, n), y = n)) +
geom_col(show.legend = FALSE, fill = 'steelblue') +
ylab("") + xlab("") +
coord_flip() +
ggtitle("Parole uniche di Lorenzo")
library(tidytext)
library(tidyverse)
chat%>%
unnest_tokens(input = text,
output = word) %>%
count(author, word, sort = TRUE) %>%
group_by(author) %>%
top_n(n = 6, n) %>%
ggplot(aes(x = reorder_within(word, n, autor), y = n, fill = author)) +
geom_col(show.legend = FALSE) +
ylab("") +
xlab("") +
coord_flip() +
facet_wrap(~author, ncol = 2, scales = "free_y") +
scale_x_reordered() +
ggtitle("Parole più usate")
chat%>%
unnest_tokens(input = text,
output = word) %>%
count(author, word, sort = TRUE) %>%
group_by(author) %>%
top_n(n = 6, n) %>%
ggplot(aes(x = reorder_within(word, n, author), y = n, fill = author)) +
geom_col(show.legend = FALSE) +
ylab("") +
xlab("") +
coord_flip() +
facet_wrap(~author, ncol = 2, scales = "free_y") +
scale_x_reordered() +
ggtitle("Parole più usate")
chat_clean%>%
unnest_tokens(input = text,
output = word) %>%
count(author, word, sort = TRUE) %>%
group_by(author) %>%
top_n(n = 6, n) %>%
ggplot(aes(x = reorder_within(word, n, author), y = n, fill = author)) +
geom_col(show.legend = FALSE) +
ylab("") +
xlab("") +
coord_flip() +
facet_wrap(~author, ncol = 2, scales = "free_y") +
scale_x_reordered() +
ggtitle("Parole più usate")
chat%>%
unnest_tokens(input = text,
output = word) %>%
count(author, word, sort = TRUE) %>%
group_by(author) %>%
top_n(n = 6, n) %>%
ggplot(aes(x = reorder_within(word, n, author), y = n, fill = author)) +
geom_col(show.legend = FALSE) +
ylab("") +
xlab("") +
coord_flip() +
facet_wrap(~author, ncol = 2, scales = "free_y") +
scale_x_reordered() +
ggtitle("Parole più usate")
chat%>%
unnest_tokens(input = text,
output = word) %>%
count(author, word, sort = TRUE) %>%
group_by(author) %>%
top_n(n = 10, n) %>%
ggplot(aes(x = reorder_within(word, n, author), y = n, fill = author)) +
geom_col(show.legend = FALSE) +
ylab("") +
xlab("") +
coord_flip() +
facet_wrap(~author, ncol = 2, scales = "free_y") +
scale_x_reordered() +
ggtitle("Parole più usate")
library(textdata)
library(textdata)
library(tidytext)
chat_clean <- chat %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
chat_clean <- chat_clean %>%
na.omit(chat_clean)
chat_clean <- chat_clean %>%
filter(!word %in% to_remove)
nrc_joy <- get_sentiments("nrc") %>%
filter(sentiment == "joy")
bullring_sentiment_bing <- chat_clean %>%
inner_join(get_sentiments("bing")) %>%
count(author, sentiment) %>%
spread(sentiment, n, fill = 0) %>%
mutate(sentiment = positive - negative)
bullring_sentiment_afinn <- chat_clean %>%
inner_join(get_sentiments("afinn")) %>%
group_by(author) %>%
summarise(sentiment = sum(value)) %>%
mutate(method = "Group Chat Sentiment")
bullring_sentiment_afinn%>%
ggplot(aes(author, sentiment, fill = method)) +
geom_col(show.legend = FALSE) +
facet_wrap(~method, ncol = 3, scales = "free_y")
library(wordcloud)
chat_clean%>%
count(word) %>%
with(wordcloud(word, n,colors = c("#D55E00", "#009E73"), max.words = 100))
library(reshape2)
chat_clean %>%
inner_join(get_sentiments("bing")) %>%
count(word, sentiment, sort = TRUE) %>%
acast(word ~ sentiment, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#D55E00", "#009E73"),
max.words = 100)
library(rwhatsapp)
library(tidyverse)
library("dplyr")
library("tidytext")
library("stopwords")
chat <- rwa_read("~/Desktop/GitHub/D4SI/dataset/WhatsApp Chat with Valhalla!.txt") %>%
filter(!is.na(author)) # rimuove messaggi senza autori
chat
to_remove <- c((stopwords),
"media",
"omitted",
"image",
"audio",
"video",
"gif"
)
View(chat)
chat_clean <- chat %>%
unnest_tokens(word, text) %>%
anti_join(stop_words)
View(chat_clean)
View(chat)
chat_clean <- chat_clean %>%
na.omit(chat_clean)
chat_clean <- chat_clean %>%
filter(!word %in% to_remove)
names(chat)
library("ggplot2"); theme_set(theme_minimal())
library("lubridate")
View(chat)
chat %>%
mutate(day = date(time)) %>%
count(day) %>%
ggplot(aes(x = day, y = n)) +
geom_bar(stat = "identity") +
ylab("") + xlab("") +
ggtitle("Messaggi ogni giorno")
library(plotly)
ggplotly(chat %>%
mutate(day = date(time)) %>%
count(day) %>%
ggplot(aes(x = day, y = n)) +
geom_bar(stat = "identity") +
ylab("") + xlab("") +
ggtitle("Messaggi ogni giorno"))
x<- chat %>%
mutate(day = date(time)) %>%
count(day) %>%
ggplot(aes(x = day, y = n)) +
geom_bar(stat = "identity") +
ylab("") + xlab("") +
ggtitle("Messaggi ogni giorno")
ggplotly(x)
chat_clean %>%
mutate(day = date(time)) %>%
count(author) %>%
ggplot(aes(x = reorder(author, n), y = n)) +
geom_bar(stat = "identity") +
ylab("") + xlab("") +
coord_flip() +
ggtitle("Numeri di messaggi per partecipante alla chat")
chat_clean %>%
mutate(day = date(time)) %>%
count(author) %>%
ggplot(aes(x = author, y = n)) +
geom_bar(stat = "identity") +
ylab("") + xlab("") +
coord_flip() +
ggtitle("Numeri di messaggi per partecipante alla chat")
author
chat_clean %>%
mutate(day = date(time)) %>%
count(author) %>%
ggplot(aes(x = reorder(author, n), y = n)) +
geom_bar(stat = "identity") +
ylab("") + xlab("") +
coord_flip() +
ggtitle("Numeri di messaggi per partecipante alla chat")
chat %>%
mutate(day = date(time)) %>%
count(author) %>%
ggplot(aes(x = reorder(author, n), y = n)) +
geom_bar(stat = "identity") +
ylab("") + xlab("") +
coord_flip() +
ggtitle("Numeri di messaggi per partecipante alla chat")
chat_clean%>%
filter(author == "Lorenzo Andreoli") %>%
count(word, sort = TRUE) %>%
top_n(n = 6, n) %>%
ggplot(aes(x = reorder(author, n), y = n)) +
geom_col(show.legend = FALSE, fill = 'steelblue') +
ylab("") + xlab("") +
coord_flip() +
ggtitle("Parole uniche di _____")
chat_clean%>%
filter(author == "Lorenzo Andreoli") %>%
count(word, sort = TRUE) %>%
top_n(n = 6, n) %>%
ggplot(aes(x = reorder(word, n), y = n)) +
geom_col(show.legend = FALSE, fill = 'steelblue') +
ylab("") + xlab("") +
coord_flip() +
ggtitle("Parole uniche di _____")
knitr::opts_chunk$set(echo = TRUE)
install.packages("rwhatsapp")
library(rwhatsapp)
library(tidyverse)
library(lubridate)
library("tidyr")
library("dplyr")
library("ggplot2"); #theme_set(theme_minimal())
library("tidytext")
library("stopwords")
# carichiamo un dataset di esempio
history <- system.file("extdata", "sample.txt", package = "rwhatsapp")
chat <- rwa_read(history)
chat
chat%>%
unnest_tokens(input = text,
output = word) %>%
count(author, word, sort = TRUE) %>%
group_by(author) %>%
top_n(n = 6, n) %>%
ggplot(aes(x = reorder_within(word, n, author), y = n, fill = author)) +
geom_col(show.legend = FALSE) +
ylab("") +
xlab("") +
coord_flip() +
facet_wrap(~author, ncol = 2, scales = "free_y") +
scale_x_reordered() +
ggtitle("Parole più usate")
install.packages("rwhatsapp")
chat_clean%>%
unnest_tokens(input = text,
output = word) %>%
count(author, word, sort = TRUE) %>%
group_by(author) %>%
top_n(n = 6, n) %>%
ggplot(aes(x = reorder_within(word, n, author), y = n, fill = author)) +
geom_col(show.legend = FALSE) +
ylab("") +
xlab("") +
coord_flip() +
facet_wrap(~author, ncol = 2, scales = "free_y") +
scale_x_reordered() +
ggtitle("Parole più usate")
chat_clean%>%
unnest_tokens(input = text,
output = word) %>%
count(author, word, sort = TRUE) %>%
group_by(author) %>%
top_n(n = 6, n) %>%
ggplot(aes(x = reorder_within(word, n, author), y = n, fill = author)) +
geom_col(show.legend = FALSE) +
ylab("") +
xlab("") +
coord_flip() +
facet_wrap(~author, ncol = 2, scales = "free_y") +
scale_x_reordered() +
ggtitle("Parole più usate")
chat%>%
unnest_tokens(input = text,
output = word) %>%
count(author, word, sort = TRUE) %>%
group_by(author) %>%
top_n(n = 6, n) %>%
ggplot(aes(x = reorder_within(word, n, author), y = n, fill = author)) +
geom_col(show.legend = FALSE) +
ylab("") +
xlab("") +
coord_flip() +
facet_wrap(~author, ncol = 2, scales = "free_y") +
scale_x_reordered() +
ggtitle("Parole più usate")
chat <- rwa_read("~/Desktop/GitHub/D4SI/dataset/WhatsApp Chat with Valhalla!.txt") %>%
filter(!is.na(author)) # rimuove messaggi senza autori
chat%>%
unnest_tokens(input = text,
output = word) %>%
count(author, word, sort = TRUE) %>%
group_by(author) %>%
top_n(n = 6, n) %>%
ggplot(aes(x = reorder_within(word, n, author), y = n, fill = author)) +
geom_col(show.legend = FALSE) +
ylab("") +
xlab("") +
coord_flip() +
facet_wrap(~author, ncol = 2, scales = "free_y") +
scale_x_reordered() +
ggtitle("Parole più usate")
